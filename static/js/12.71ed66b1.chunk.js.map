{"version":3,"sources":["pages/Register.js"],"names":["Border","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","authStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","resolve","placeholder","min","Password","dependencies","hasFeedback","getFieldValue","type","htmlType"],"mappings":"ygBAMA,IAAMA,EAASC,IAAOC,IAAV,KAQNC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EAAGH,KAAM,KAiGNI,UA7FE,WAAO,IACdC,EAAcC,cAAdD,UACFE,EAAUC,cAkBhB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QACLC,SAtBW,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACPC,MAAK,WACJZ,EAAQa,KAAK,QACZC,OAAM,WACPT,QAAQC,IAAI,gCAeZS,eAXiB,SAAAC,GACrBX,QAAQC,IAAI,UAAWU,MAYnB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EAAMC,QAAS,oDAE3B,CACEC,UAAW,SAACC,EAAMC,GAChB,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,sEACrCD,QAAQE,cAKrB,kBAAC,IAAD,CAAOC,YAAY,0CAGrB,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EAAMC,QAAS,8CAE3B,CACES,IAAK,EAAGT,QAAS,qCAIrB,kBAAC,IAAMU,SAAP,CAAgBF,YAAY,oCAE9B,kBAAC,IAAKZ,KAAN,CACEC,MAAM,2BACNhB,KAAK,kBACL8B,aAAc,CAAC,YACfC,aAAW,EACXd,MAAO,CACL,CACEC,UAAU,EAAMC,QAAS,8CAE3B,gBAAGa,EAAH,EAAGA,cAAH,MAAwB,CACtBZ,UADsB,SACZC,EAAMC,GACd,OAAKA,GAASU,EAAc,cAAgBV,EAGrCE,QAAQC,OAAO,8CAFbD,QAAQE,eAOvB,kBAAC,IAAMG,SAAP,CAAgBF,YAAY,oCAG9B,kBAAC,IAAKZ,KAAStB,EACb,kBAAC,IAAD,CAAQwC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.71ed66b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { useStores } from '../stores'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Border = styled.div`\r\nmargin:30px auto;\r\nbox-shadow:2px 2px 4px 0 rgba(0,0,0,0.2);\r\nborder-radius:4px;\r\npadding:20px;\r\nmax-width:600px;\r\nbackground-color:#eeeeee;\r\n`\r\nconst Title = styled.h1`\r\ntext-align:center;\r\nmargin: 10px;\r\n`\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 10,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8, span: 16,\r\n  },\r\n};\r\n\r\nconst Register = () => {\r\n  const { authStore } = useStores()\r\n  const history = useHistory()\r\n\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    authStore.setUsername(values.username)\r\n    authStore.setPassword(values.password)\r\n    authStore.register()\r\n      .then(() => {\r\n        history.push('/')\r\n      }).catch(() => {\r\n        console.log('注册失败')\r\n      })\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Border>\r\n      <Title>注册</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true, message: '您还未输入用户名',\r\n            },\r\n            {\r\n              validator: (rule, value) => {\r\n                if (/\\W/.test(value)) return Promise.reject('只能是字母数字和下划线');\r\n                return Promise.resolve();\r\n              }\r\n            }\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入用户名\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true, message: '您还未输入密码',\r\n            },\r\n            {\r\n              min: 6, message: '最少6个字符'\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"请设置密码\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true, message: '您还未输入密码',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject('两次密码不一致');\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"请确认密码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Border >\r\n  );\r\n};\r\n\r\nexport default Register"],"sourceRoot":""}